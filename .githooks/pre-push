#!/usr/bin/env bash
#
# Pre-push hook to ensure build is up-to-date
#

set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

PROJECT_ROOT="$(git rev-parse --show-toplevel)"
BUILD_DIR="${PROJECT_ROOT}/build"

# Check if pre-push validation is enabled
VALIDATE_BUILD=$(git config --get hooks.validatebuild || echo "false")

if [[ "$VALIDATE_BUILD" != "true" ]]; then
    exit 0
fi

echo -e "${YELLOW}üîç Checking if build is up-to-date...${NC}"

# Check if build directory exists
if [[ ! -d "$BUILD_DIR" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Build directory not found. Run './build.sh' before pushing.${NC}"
    echo -e "${YELLOW}   Or disable this check with: git config hooks.validatebuild false${NC}"
    exit 0
fi

# Check if there are any ZIP files
if ! ls "$BUILD_DIR"/*.zip 1> /dev/null 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è  No ZIP files found in build directory.${NC}"
    echo -e "${YELLOW}   Run './build.sh' before pushing.${NC}"
    exit 0
fi

echo -e "${GREEN}‚úÖ Build directory looks good${NC}"
exit 0
